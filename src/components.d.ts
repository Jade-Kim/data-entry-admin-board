/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppHome {
    }
    interface AppItem {
    }
    interface AppMenu {
    }
    interface AppOption {
    }
    interface AppPrime {
    }
    interface AppRoot {
    }
    interface AppTax {
    }
    interface ArrowGuide {
    }
    interface ButtonAdd {
    }
    interface FoundTitle {
        "length": any;
        "name": string;
    }
    interface TableComponent {
        "headerKeys": any;
        "headerTitles": any;
        "newTDclasses": any;
        "pageID": string;
        "pageTitle": string;
        "serviceData": any;
    }
    interface ViewStack {
        "eachFade": number;
        "index": number;
        "view": string;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppItemElement extends Components.AppItem, HTMLStencilElement {
    }
    var HTMLAppItemElement: {
        prototype: HTMLAppItemElement;
        new (): HTMLAppItemElement;
    };
    interface HTMLAppMenuElement extends Components.AppMenu, HTMLStencilElement {
    }
    var HTMLAppMenuElement: {
        prototype: HTMLAppMenuElement;
        new (): HTMLAppMenuElement;
    };
    interface HTMLAppOptionElement extends Components.AppOption, HTMLStencilElement {
    }
    var HTMLAppOptionElement: {
        prototype: HTMLAppOptionElement;
        new (): HTMLAppOptionElement;
    };
    interface HTMLAppPrimeElement extends Components.AppPrime, HTMLStencilElement {
    }
    var HTMLAppPrimeElement: {
        prototype: HTMLAppPrimeElement;
        new (): HTMLAppPrimeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTaxElement extends Components.AppTax, HTMLStencilElement {
    }
    var HTMLAppTaxElement: {
        prototype: HTMLAppTaxElement;
        new (): HTMLAppTaxElement;
    };
    interface HTMLArrowGuideElement extends Components.ArrowGuide, HTMLStencilElement {
    }
    var HTMLArrowGuideElement: {
        prototype: HTMLArrowGuideElement;
        new (): HTMLArrowGuideElement;
    };
    interface HTMLButtonAddElement extends Components.ButtonAdd, HTMLStencilElement {
    }
    var HTMLButtonAddElement: {
        prototype: HTMLButtonAddElement;
        new (): HTMLButtonAddElement;
    };
    interface HTMLFoundTitleElement extends Components.FoundTitle, HTMLStencilElement {
    }
    var HTMLFoundTitleElement: {
        prototype: HTMLFoundTitleElement;
        new (): HTMLFoundTitleElement;
    };
    interface HTMLTableComponentElement extends Components.TableComponent, HTMLStencilElement {
    }
    var HTMLTableComponentElement: {
        prototype: HTMLTableComponentElement;
        new (): HTMLTableComponentElement;
    };
    interface HTMLViewStackElement extends Components.ViewStack, HTMLStencilElement {
    }
    var HTMLViewStackElement: {
        prototype: HTMLViewStackElement;
        new (): HTMLViewStackElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-item": HTMLAppItemElement;
        "app-menu": HTMLAppMenuElement;
        "app-option": HTMLAppOptionElement;
        "app-prime": HTMLAppPrimeElement;
        "app-root": HTMLAppRootElement;
        "app-tax": HTMLAppTaxElement;
        "arrow-guide": HTMLArrowGuideElement;
        "button-add": HTMLButtonAddElement;
        "found-title": HTMLFoundTitleElement;
        "table-component": HTMLTableComponentElement;
        "view-stack": HTMLViewStackElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppItem {
    }
    interface AppMenu {
    }
    interface AppOption {
    }
    interface AppPrime {
    }
    interface AppRoot {
    }
    interface AppTax {
    }
    interface ArrowGuide {
    }
    interface ButtonAdd {
    }
    interface FoundTitle {
        "length"?: any;
        "name"?: string;
    }
    interface TableComponent {
        "headerKeys"?: any;
        "headerTitles"?: any;
        "newTDclasses"?: any;
        "pageID"?: string;
        "pageTitle"?: string;
        "serviceData"?: any;
    }
    interface ViewStack {
        "eachFade"?: number;
        "index"?: number;
        "view"?: string;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-item": AppItem;
        "app-menu": AppMenu;
        "app-option": AppOption;
        "app-prime": AppPrime;
        "app-root": AppRoot;
        "app-tax": AppTax;
        "arrow-guide": ArrowGuide;
        "button-add": ButtonAdd;
        "found-title": FoundTitle;
        "table-component": TableComponent;
        "view-stack": ViewStack;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-item": LocalJSX.AppItem & JSXBase.HTMLAttributes<HTMLAppItemElement>;
            "app-menu": LocalJSX.AppMenu & JSXBase.HTMLAttributes<HTMLAppMenuElement>;
            "app-option": LocalJSX.AppOption & JSXBase.HTMLAttributes<HTMLAppOptionElement>;
            "app-prime": LocalJSX.AppPrime & JSXBase.HTMLAttributes<HTMLAppPrimeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-tax": LocalJSX.AppTax & JSXBase.HTMLAttributes<HTMLAppTaxElement>;
            "arrow-guide": LocalJSX.ArrowGuide & JSXBase.HTMLAttributes<HTMLArrowGuideElement>;
            "button-add": LocalJSX.ButtonAdd & JSXBase.HTMLAttributes<HTMLButtonAddElement>;
            "found-title": LocalJSX.FoundTitle & JSXBase.HTMLAttributes<HTMLFoundTitleElement>;
            "table-component": LocalJSX.TableComponent & JSXBase.HTMLAttributes<HTMLTableComponentElement>;
            "view-stack": LocalJSX.ViewStack & JSXBase.HTMLAttributes<HTMLViewStackElement>;
        }
    }
}
