const t=window.boxcar.h;class e{constructor(){this._loadUpdated=!1,this.page=0,this.limit=0,this.subscribe=!1,this.queryLocal=!1,this.context="__default",this.write=void 0}deleteContext(t){if(t||(t="__default"),e.locator[t])for(let r=0;r<e.locator[t].length;r++)if(e.locator[t][r]===this)return e.locator[t].splice(r,1),!0;return!1}saveContext(t){if(t||(t="__default"),e.locator[t]){for(let r=0;r<e.locator[t].length;r++)if(e.locator[t][r]===this)return!1;e.locator[t].push(this)}else e.locator[t]=[this];return!0}notifyContext(t,r,a){if(t||(t="__default"),e.locator[t])for(let o=0;o<e.locator[t].length;o++)e.locator[t][o].name===r&&e.locator[t][o].valueChanged.emit(a)}setContext(t,e){t!==e&&(this.deleteContext(e),this.saveContext(t))}setWrite(t,r){e.lastWrite["__"+this.context+" :: __"+this.name]=t,this.notifyContext(this.context,this.name,t)}render(){return t("slot",null)}componentDidLoad(){this.saveContext(this.context),void 0!==this.write?this.setWrite(this.write):e.lastWrite.hasOwnProperty("__"+this.context+" :: __"+this.name)&&this.valueChanged.emit(e.lastWrite["__"+this.context+" :: __"+this.name])}static get is(){return"model-data"}static get properties(){return{args:{type:"Any",attr:"args"},context:{type:String,attr:"context",watchCallbacks:["setContext"]},limit:{type:Number,attr:"limit"},name:{type:String,attr:"name"},page:{type:Number,attr:"page"},queryLocal:{type:Boolean,attr:"query-local"},sort:{type:"Any",attr:"sort"},subscribe:{type:Boolean,attr:"subscribe"},where:{type:"Any",attr:"where"},write:{type:"Any",attr:"write",watchCallbacks:["setWrite"]}}}static get events(){return[{name:"valueChanged",method:"valueChanged",bubbles:!0,cancelable:!0,composed:!0}]}}e.locator={},e.lastWrite={};export{e as ModelData};